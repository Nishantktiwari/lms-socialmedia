name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline when changes are pushed to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Build the Docker images
      - name: Build and push Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service ./auth-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/users-service ./users-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/courses-service ./courses-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/media-service ./media-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notifications-service ./notifications-service
          docker build -t ${{ secrets.DOCKER_USERNAME }}/messaging-service ./messaging-service

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Push the images to DockerHub
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service
          docker push ${{ secrets.DOCKER_USERNAME }}/users-service
          docker push ${{ secrets.DOCKER_USERNAME }}/courses-service
          docker push ${{ secrets.DOCKER_USERNAME }}/media-service
          docker push ${{ secrets.DOCKER_USERNAME }}/notifications-service
          docker push ${{ secrets.DOCKER_USERNAME }}/messaging-service

